[gd_scene load_steps=13 format=3 uid="uid://d2ht1wmryl1j1"]

[ext_resource type="Script" path="res://Fish/TestCreature.gd" id="1_b23wn"]
[ext_resource type="Texture2D" uid="uid://c5vrsukr7yg4o" path="res://Fish/CreatureSprites/SpaceCreature4.png" id="2_fj5e2"]

[sub_resource type="Animation" id="Animation_ph8r8"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [3.14159]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [3.14159]
}

[sub_resource type="Animation" id="Animation_gwt44"]
resource_name = "idle_down"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [3.14159]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [3.14159]
}

[sub_resource type="Animation" id="Animation_7caic"]
resource_name = "idle_down_left"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [3.92699]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [3.92699]
}

[sub_resource type="Animation" id="Animation_4e447"]
resource_name = "idle_down_right"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [2.35619]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [2.35619]
}

[sub_resource type="Animation" id="Animation_gqfmk"]
resource_name = "idle_left"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4.71239]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4.71239]
}

[sub_resource type="Animation" id="Animation_nn2hp"]
resource_name = "idle_right"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.5708]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.5708]
}

[sub_resource type="Animation" id="Animation_f1kr6"]
resource_name = "idle_up"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_v13vt"]
resource_name = "idle_up_left"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("..:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [5.49779]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../../../PhysicalBody:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [5.49779]
}

[sub_resource type="Animation" id="Animation_a6j7q"]
resource_name = "idle_up_right"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../../PhysicalBody:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.785398]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("..:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.785398]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_socaw"]
_data = {
"RESET": SubResource("Animation_ph8r8"),
"idle_down": SubResource("Animation_gwt44"),
"idle_down_left": SubResource("Animation_7caic"),
"idle_down_right": SubResource("Animation_4e447"),
"idle_left": SubResource("Animation_gqfmk"),
"idle_right": SubResource("Animation_nn2hp"),
"idle_up": SubResource("Animation_f1kr6"),
"idle_up_left": SubResource("Animation_v13vt"),
"idle_up_right": SubResource("Animation_a6j7q")
}

[node name="Enemy" type="CharacterBody2D"]
motion_mode = 1
script = ExtResource("1_b23wn")

[node name="PhysicalBody" type="CollisionPolygon2D" parent="."]
visible = false
rotation = 3.14159
disabled = true

[node name="AreaBody" type="Area2D" parent="."]
collision_layer = 2

[node name="CollisionBody" type="CollisionPolygon2D" parent="AreaBody"]
rotation = 3.14159
polygon = PackedVector2Array(-16.7955, -13.4005, -16.6187, -21.1787, -6.01213, -35.8512, -2.4766, -38.5028, 3.18026, -36.028, 11.4888, -22.4161, 12.7262, -12.5167, 7.06934, -3.50105, -1.06239, 3.0397, -10.078, -3.67782)

[node name="EnemySprite" type="Sprite2D" parent="AreaBody/CollisionBody"]
scale = Vector2(0.15, 0.15)
texture = ExtResource("2_fj5e2")

[node name="AnimationPlayer" type="AnimationPlayer" parent="AreaBody/CollisionBody/EnemySprite"]
autoplay = "idle_up"
libraries = {
"": SubResource("AnimationLibrary_socaw")
}

[node name="SizeLabel" type="Label" parent="."]
visible = false
offset_left = -40.0
offset_top = -42.0
offset_right = 40.0
offset_bottom = -19.0
text = "Size"
horizontal_alignment = 1

[node name="SizeDisplayDelay" type="Timer" parent="."]
wait_time = 0.1
one_shot = true
autostart = true

[node name="EnemyFeedTime" type="Timer" parent="."]
one_shot = true

[connection signal="area_entered" from="AreaBody" to="." method="_on_area_body_area_entered"]
[connection signal="timeout" from="SizeDisplayDelay" to="." method="_on_size_display_delay_timeout"]
[connection signal="timeout" from="EnemyFeedTime" to="." method="_on_enemy_feed_time_timeout"]
